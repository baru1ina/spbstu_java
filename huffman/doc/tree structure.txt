Структура Дерева Кодирования
Дерево кодирования, используемое в данном проекте, представляет собой бинарное дерево.
Оно строится на основе частоты повторения символов в исходном файле.
Дерево состоит из листьев (конечных узлов) и внутренних узлов.
Каждый лист дерева представляет уникальный символ, а внутренние узлы содержат суммарные частоты своих детей.
Кодирование символов осуществляется путем обхода дерева от корня к листьям, где следование налево - «0», направо – «1».
Все коды являются уникальными и подчиняются префиксному правилу: ни один код не является префиксом любого другого.
Это позволяет декодировать зашифрованную строку единственным образом.


Структура класса Node
Класс Node представляет узел дерева кодирования и содержит следующие поля:
symbol – символ (если узел является листом);
frequency – частота символа в тексте;
left – ссылка на левого потомка;
right – ссылка на правого потомка.


Структура класса Tree
Класс Tree представляет собой дерево кодирования и содержит поле root – корень дерева типа Node.


Построение дерева Хаффмана
Построение дерева реализовано в методе buildHuffmanTree класса HuffmanBasicBasic.
Он использует PriorityQueue, где узлы сравниваются по их частотам появления.
Построение происходит в несколько этапов: сначала создаются узлы для каждого символа, затем они объединяются в дерево до тех пор, пока не останется один корневой узел.


Структура дерева кодирования
Структура дерева кодирования представляет собой набор строк, где каждая строка содержит информацию об одном символе и его коде Хаффмана.
Каждая строка выводится в формате: «символ - его бинарный код»